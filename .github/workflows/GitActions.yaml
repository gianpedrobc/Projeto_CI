name: CI - Build Docker Image and Update Manifest

on:
  push:
    branches: [ "main" ]

jobs:
  build_and_update:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout do código da APLICAÇÃO (projeto-ci)
      - name: Checkout App Repo
        uses: actions/checkout@v4

      # 2. Login no Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 3. Construir e enviar a imagem Docker com uma tag única (hash do commit)
      - name: Build and push Docker image
        id: build-docker
        uses: docker/build-push-action@v5
        with:
          context: ./app
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-app:${{ github.sha }}

      # --- PARTE NOVA: ATUALIZAR O REPOSITÓRIO DE MANIFESTOS ---

      # 4. Clonar o repositório de MANIFESTOS (projeto-cd)
      - name: Checkout Manifest Repo
        uses: actions/checkout@v4
        with:
          repository: SEU-USUARIO-GITHUB/projeto-cd # <-- MUITO IMPORTANTE
          token: ${{ secrets.PAT_TOKEN }} # <-- Usaremos um token para dar permissão
          path: projeto-cd

      # 5. Atualizar a tag da imagem no arquivo deployment.yaml
      - name: Update image tag in deployment.yaml
        run: |
          sed -i 's|image: ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-app:.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-app:${{ github.sha }}|' projeto-cd/k8s/deployment.yaml

      # 6. Fazer commit e push da alteração no repositório de MANIFESTOS
      - name: Commit and push changes
        run: |
          cd projeto-cd
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add k8s/deployment.yaml
          git commit -m "ci: Atualiza imagem para ${{ github.sha }}"
          git push
